{"mappings":"MAiCA,SAASA,IAEL,IAAIC,EAAe,IAAIC,KACvBD,EAAaE,SAAS,GACtBF,EAAaG,WAAW,GAGxB,IAAIC,EAAQJ,EAAaK,UAAYJ,KAAKK,MAO1C,OANIF,EAAQ,IAERA,GAAS,OAING,KAAKC,aAAaC,iBAAiB,qBAAsB,CAC5DC,KAAM,gCACNC,KAAM,0BAELC,MAAK,WAEF,OAAOL,KAAKC,aAAaC,iBAAiB,oBAAqB,CAC3DC,KAAM,iCACNC,KAAM,yBAGd,IACCC,MAAK,WAEF,OAAO,IAAIC,SAAQ,SAAUC,GACzBC,YAAW,WACPD,EAAQf,IACZ,GAAGK,EACP,GACJ,GACR,CAnEAG,KAAKS,iBAAiB,WAAW,SAAUC,GACvCC,QAAQC,IAAI,4BAEZF,EAAMG,UAAUrB,IACpB,IAEAQ,KAAKS,iBAAiB,YAAY,SAAUC,GACxCC,QAAQC,IAAI,2BAChB,IAEAZ,KAAKS,iBAAiB,QAAQ,SAAUC,GACpCC,QAAQC,IAAI,8BAGZ,IAAIE,EAAmBJ,EAAMK,KAAKC,OAG9BC,EAAU,CACVd,KAAMW,EAAiBX,KACvBC,KAAMU,EAAiBV,MAK3BM,EAAMG,UACFb,KAAKC,aAAaC,iBAAiBY,EAAiBI,MAAOD,GAEnE,IAEAjB,KAAKS,iBAAiB,qBAAqB,SAAUC,GACjDC,QAAQC,IAAI,uBAChB,G","sources":["src/js/sw.js"],"sourcesContent":["self.addEventListener('install', function (event) {\r\n    console.log('Service Worker installed');\r\n\r\n    event.waitUntil(scheduleNotifications());\r\n});\r\n\r\nself.addEventListener('activate', function (event) {\r\n    console.log('Service Worker activated');\r\n});\r\n\r\nself.addEventListener('push', function (event) {\r\n    console.log('Push notification received');\r\n\r\n    // Parse the received data\r\n    var notificationData = event.data.json();\r\n\r\n    // Customize the notification\r\n    var options = {\r\n        body: notificationData.body,\r\n        icon: notificationData.icon,\r\n        // Add more options as needed\r\n    };\r\n\r\n    // Show the notification\r\n    event.waitUntil(\r\n        self.registration.showNotification(notificationData.title, options)\r\n    );\r\n});\r\n\r\nself.addEventListener('notificationclick', function (event) {\r\n    console.log('Notification clicked');\r\n});\r\n\r\nfunction scheduleNotifications() {\r\n    // Schedule notifications at a specific time each day\r\n    var scheduleTime = new Date();\r\n    scheduleTime.setHours(9);  // Set the desired hour\r\n    scheduleTime.setMinutes(0);  // Set the desired minute\r\n\r\n    // Calculate the delay until the next scheduled time\r\n    var delay = scheduleTime.getTime() - Date.now();\r\n    if (delay < 0) {\r\n        // If the scheduled time has already passed, set the delay for the next day\r\n        delay += 24 * 60 * 60 * 1000;\r\n    }\r\n\r\n    // Schedule the notification\r\n    return self.registration.showNotification('Daily Notification', {\r\n        body: 'This is a daily notification.',\r\n        icon: 'notification-icon.png',\r\n    })\r\n        .then(function () {\r\n            // Reschedule the next notification after the current one is shown\r\n            return self.registration.showNotification('Next Notification', {\r\n                body: 'This is the next notification.',\r\n                icon: 'notification-icon.png',\r\n                // Add more options as needed\r\n            });\r\n        })\r\n        .then(function () {\r\n            // Repeat the process daily\r\n            return new Promise(function (resolve) {\r\n                setTimeout(function () {\r\n                    resolve(scheduleNotifications());\r\n                }, delay);\r\n            });\r\n        });\r\n}"],"names":["$1c0483827ed1eb8f$var$scheduleNotifications","scheduleTime","Date","setHours","setMinutes","delay","getTime","now","self","registration","showNotification","body","icon","then","Promise","resolve","setTimeout","addEventListener","event","console","log","waitUntil","notificationData","data","json","options","title"],"version":3,"file":"sw.js.map"}